<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	
	<annotation-driven />

	<!--
	- 기존 뷰 리졸버
		- 디스패처에게 전달받은 문자열을 가공해서 view를 선택.
			- 예외로 redirect: 거나 forward: 인 경우 view 선택x
		- prefix : 받은 문자열 앞에 붙일 문자열
		- suffix : 받은 문자열 뒤에 붙일 문자열
		- 기본 경로는 webapp부터 시작.
	  -->
	<resources mapping="/resources/**" location="/resources/" /><!-- 리소스로 시작하면 해당 위치로 보낸다 슬래시 시작은 webapp폴더 기준 -->
	<resources mapping="/download/**" location="file:///D:/uploads/" />	<!-- 외부 파일 접근하려면 file:///붙여야 -->
	
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />	<!-- home 앞에 오는 애들. /WEB-INF/views/return home이 나옴. -->
		<beans:property name="suffix" value=".jsp" />		<!-- home 뒤에 오는 애들. home.jsp이 나옴. -->
	</beans:bean>
	
	<context:component-scan base-package="kr.kh.spring.*" />	<!-- spring.controller패키지로 되어있건걸 all로 변경 -->
	
	
	<!-- 타일즈 뷰 리졸버 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	    <beans:property name="order" value="1" /><!-- 우선순위를 이쪽으로 지정(value=1) -->
	</beans:bean>
	     
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <beans:property name="definitions">
	        <beans:list>
	            <beans:value>/WEB-INF/spring/tiles-def.xml</beans:value>
	        </beans:list>
	    </beans:property>
	</beans:bean>
	<context:component-scan base-package="kr.kh.spring.*" />

	<!-- 인터셉터 등록 -->
	<beans:bean id="loginInterceptor" class="kr.kh.spring.interceptor.LoginInterceptor"/>
	<beans:bean id="adminInterceptor" class="kr.kh.spring.interceptor.AdminInterceptor"/>
	<beans:bean id="guestInterceptor" class="kr.kh.spring.interceptor.GuestInterceptor"/>
	<beans:bean id="memberInterceptor" class="kr.kh.spring.interceptor.MemberInterceptor"/>
	<beans:bean id="autoLoginInterceptor" class="kr.kh.spring.interceptor.AutoLoginInterceptor"/>
	<beans:bean id="prevUrlInterceptor" class="kr.kh.spring.interceptor.PrevUrlInterceptor"/><!-- 얘가 logininterceptor 앞에 있으면 문제 생길수 있음. 순서 중요. -->
	<!--  beans:bean id="인터셉터객체명" class="패키지명.SampleInterceptor" -->

	<!-- 인터셉터 맵핑 -->
	<interceptors>
		<interceptor>
			<mapping path="/login"/>	<!-- 로그인에서 나올때 이전url로 -->
			<beans:ref bean="prevUrlInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/**"/>	<!-- 어떤 url 들어가도 autoLoginInterceptor 실행되도록 -->
			<beans:ref bean="autoLoginInterceptor"/>
		</interceptor>
		
		<interceptor>
			<!-- /login(get,post)를 왔다갔다 할때마다 LoginInterceptor 실행 -->
			<mapping path="/login"/>
			<beans:ref bean="loginInterceptor"/>
			<!-- 포스트일떄 나오면서 한번 redirect로 겟방식으로 나올때 한번 총 두번 찍혀야 -->
		</interceptor>
		<interceptor>
			<mapping path="/admin/**"/>
			<beans:ref bean="adminInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/login"/>
			<mapping path="/signup"/>
			<beans:ref bean="guestInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/post/insert"/>
			<mapping path="/post/delete/*"/>
			<mapping path="/post/update/*"/>
			<beans:ref bean="memberInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 파일 업로드 용량 제한 설정 -->
	<beans:bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 업로드 최대 크기 10Mb -->
		<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean>
		<beans:bean id="uploadPath" class="java.lang.String">
		<!--
		업로드할 파일 경로
		beans:constructor-arg value="서버에 저장할 경로"
		-->
		<beans:constructor-arg value="D:\\uploads"/>
	</beans:bean>

</beans:beans>